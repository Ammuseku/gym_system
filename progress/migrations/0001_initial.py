# Generated by Django 4.2.10 on 2025-04-07 08:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("workouts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkoutLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("workout_name", models.CharField(blank=True, max_length=100)),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True, help_text="Duration in minutes", null=True
                    ),
                ),
                ("calories_burned", models.PositiveIntegerField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workout_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Milestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("date_achieved", models.DateField(default=django.utils.timezone.now)),
                (
                    "weight",
                    models.FloatField(
                        blank=True,
                        help_text="Weight achieved (if applicable)",
                        null=True,
                    ),
                ),
                (
                    "reps",
                    models.PositiveIntegerField(
                        blank=True, help_text="Reps achieved (if applicable)", null=True
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workouts.exercise",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-date_achieved"],
            },
        ),
        migrations.CreateModel(
            name="Goal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "goal_type",
                    models.CharField(
                        choices=[
                            ("weight", "Weight Goal"),
                            ("body_fat", "Body Fat Percentage Goal"),
                            ("strength", "Strength Goal"),
                            ("endurance", "Endurance Goal"),
                            ("habit", "Habit Goal"),
                            ("other", "Other Goal"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "target_value",
                    models.FloatField(
                        blank=True,
                        help_text="Target numerical value if applicable",
                        null=True,
                    ),
                ),
                ("target_date", models.DateField(blank=True, null=True)),
                ("start_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("abandoned", "Abandoned"),
                        ],
                        default="not_started",
                        max_length=15,
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workouts.exercise",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["target_date", "start_date"],
            },
        ),
        migrations.CreateModel(
            name="BodyMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("weight", "Weight"),
                            ("body_fat", "Body Fat Percentage"),
                            ("muscle_mass", "Muscle Mass"),
                            ("chest", "Chest Measurement"),
                            ("waist", "Waist Measurement"),
                            ("hips", "Hips Measurement"),
                            ("thigh", "Thigh Measurement"),
                            ("arm", "Arm Measurement"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("value", models.FloatField()),
                ("notes", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="body_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Body Metrics",
                "ordering": ["-date", "metric_type"],
            },
        ),
    ]
